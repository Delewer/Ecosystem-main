# Generated by Django 4.2 on 2025-09-25 03:17

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
from django.utils.text import slugify


def seed_lessons(apps, schema_editor):
    Lesson = apps.get_model("estudy", "Lesson")
    LessonResource = apps.get_model("estudy", "LessonResource")

    for lesson in Lesson.objects.all():
        base_slug = slugify(lesson.title) or f"lesson-{lesson.pk}"
        slug_candidate = base_slug
        suffix = 1
        while Lesson.objects.filter(slug=slug_candidate).exclude(pk=lesson.pk).exists():
            suffix += 1
            slug_candidate = f"{base_slug}-{suffix}"

        excerpt = (lesson.excerpt or "").strip()
        if not excerpt:
            excerpt = (lesson.content or "").strip()
            excerpt = excerpt[:280]

        Lesson.objects.filter(pk=lesson.pk).update(slug=slug_candidate, excerpt=excerpt)

        legacy_resources = getattr(lesson, "resources", None)
        if legacy_resources:
            raw = (
                legacy_resources.replace("\r\n", "\n")
                .replace("\r", "\n")
                .replace(";", "\n")
            )
            if "\n" in raw:
                chunks = raw.split("\n")
            else:
                chunks = raw.split(",")

            order_index = 0
            for chunk in chunks:
                value = chunk.strip()
                if not value:
                    continue

                title = ""
                url = value
                if "|" in value:
                    title, url = [part.strip() for part in value.split("|", 1)]

                if not url:
                    continue

                title = title or f"Resource {order_index + 1}"

                if LessonResource.objects.filter(lesson_id=lesson.pk, url=url).exists():
                    continue

                LessonResource.objects.create(
                    lesson_id=lesson.pk,
                    title=title,
                    url=url,
                    order=order_index,
                )
                order_index += 1


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("estudy", "0005_alter_lesson_resources"),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="lesson",
            options={"ordering": ("date", "title")},
        ),
        migrations.AddField(
            model_name="lesson",
            name="cover_image",
            field=models.ImageField(blank=True, null=True, upload_to="lessons/covers/"),
        ),
        migrations.AddField(
            model_name="lesson",
            name="created_at",
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.AddField(
            model_name="lesson",
            name="difficulty",
            field=models.CharField(choices=[("beginner", "Beginner"), ("intermediate", "Intermediate"), ("advanced", "Advanced")], default="beginner", max_length=20),
        ),
        migrations.AddField(
            model_name="lesson",
            name="duration_minutes",
            field=models.PositiveIntegerField(default=45),
        ),
        migrations.AddField(
            model_name="lesson",
            name="excerpt",
            field=models.CharField(blank=True, max_length=300),
        ),
        migrations.AddField(
            model_name="lesson",
            name="slug",
            field=models.SlugField(blank=True, max_length=220, null=True, unique=True),
        ),
        migrations.AddField(
            model_name="lesson",
            name="updated_at",
            field=models.DateTimeField(auto_now=True, null=True),
        ),
        migrations.AddField(
            model_name="lessonprogress",
            name="completed_at",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="lessonprogress",
            name="updated_at",
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name="test",
            name="explanation",
            field=models.TextField(blank=True),
        ),
        migrations.AlterField(
            model_name="lessonprogress",
            name="lesson",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name="progress_records", to="estudy.lesson"),
        ),
        migrations.CreateModel(
            name="LessonResource",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("title", models.CharField(max_length=150)),
                ("url", models.URLField()),
                ("resource_type", models.CharField(choices=[("article", "Article"), ("video", "Video"), ("worksheet", "Worksheet"), ("interactive", "Interactive")], default="article", max_length=20)),
                ("order", models.PositiveSmallIntegerField(default=0)),
                ("lesson", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name="materials", to="estudy.lesson")),
            ],
            options={
                "ordering": ("order", "id"),
            },
        ),
        migrations.CreateModel(
            name="TestAttempt",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("selected_answer", models.CharField(max_length=255)),
                ("is_correct", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("test", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name="attempts", to="estudy.test")),
                ("user", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name="test_attempts", to=settings.AUTH_USER_MODEL)),
            ],
            options={
                "ordering": ("-created_at",),
            },
        ),
        migrations.RunPython(seed_lessons, migrations.RunPython.noop),
        migrations.RemoveField(
            model_name="lesson",
            name="resources",
        ),
    ]
